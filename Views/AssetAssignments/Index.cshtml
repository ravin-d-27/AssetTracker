@model IEnumerable<AssetTracker.Web.Models.Entities.AssetAssignment>

@{
    ViewData["Title"] = "Assignments";
}

<div class="container my-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white d-flex align-items-center justify-content-between">
            <div>
                <i class="bi bi-list-task me-2"></i>
                <strong>Assignments</strong>
            </div>
            <a asp-action="Create" class="btn btn-light btn-sm">
                <i class="bi bi-plus-circle"></i> Create New
            </a>
        </div>
        <div class="card-body p-0">
            <table class="table table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Asset)</th>
                        <th>@Html.DisplayNameFor(model => model.Employee)</th>
                        <th>@Html.DisplayNameFor(model => model.AssignedDate)</th>
                        <th>@Html.DisplayNameFor(model => model.ReturnDate)</th>
                        <th>@Html.DisplayNameFor(model => model.ConditionAtReturn)</th>
                        <th class="text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var isReturned = item.ReturnDate != null;
                        <tr class="@(isReturned ? "table-secondary" : "")">
                            <td>@Html.DisplayFor(modelItem => item.Asset.Type)</td>
                            <td>@Html.DisplayFor(modelItem => item.Employee.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.AssignedDate)</td>
                            <td>
                                @if (isReturned)
                                {
                                    <span class="badge bg-success">Returned</span>
                                    @Html.DisplayFor(modelItem => item.ReturnDate)
                                }
                                else
                                {
                                    <span class="badge bg-warning text-dark">Active</span>
                                }
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.ConditionAtReturn)</td>
                            <td class="text-end">
                                @if (!isReturned)
                                {
                                    <a asp-action="Return" asp-route-id="@item.Id" class="btn btn-warning btn-sm me-1">
                                        <i class="bi bi-arrow-90deg-left"></i> Return
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm me-1">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm text-white me-1">
                                        <i class="bi bi-eye"></i> Details
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">
                                        <i class="bi bi-trash"></i> Delete
                                    </a>
                                }
                                else
                                {
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm text-white">
                                        <i class="bi bi-eye"></i> Details
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
</div>
