@model IEnumerable<AssetTracker.Web.Models.Entities.Asset>

@{
    ViewData["Title"] = "Assets";
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-warning">@TempData["ErrorMessage"]</div>
}


<div class="container my-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <div>
                <i class="bi bi-hdd-stack-fill me-2"></i>
                <span>Assets</span>
            </div>
            <a asp-action="Create" class="btn btn-light btn-sm">
                <i class="bi bi-plus-circle"></i> Create New
            </a>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Type)</th>
                            <th>@Html.DisplayNameFor(model => model.Model)</th>
                            <th>@Html.DisplayNameFor(model => model.SerialNumber)</th>
                            <th>@Html.DisplayNameFor(model => model.PurchaseDate)</th>
                            <th>@Html.DisplayNameFor(model => model.Status)</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Type)</td>
                                <td>@Html.DisplayFor(modelItem => item.Model)</td>
                                <td>@Html.DisplayFor(modelItem => item.SerialNumber)</td>
                                <td>@Html.DisplayFor(modelItem => item.PurchaseDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                <td>
                                    @{
                                        var status = item.Status?.ToLower();
                                        var badgeClass = status switch
                                        {
                                            "available" => "success",
                                            "assigned" => "primary",
                                            "under service" => "warning",
                                            "not working" => "danger",
                                            _ => "secondary"
                                        };
                                    }
                                    <span class="badge bg-@badgeClass text-capitalize">
                                        @item.Status
                                    </span>
                                </td>
                                <td class="text-end">
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary me-1">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary me-1">
                                        <i class="bi bi-eye-fill"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-trash-fill"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
